version: 2.1

parameters:
  force_cache_save:
    type: boolean
    default: false
  cache_version:
    type: string
    default: "v4"

executors:
  nodejs:
    docker:
      - image: kofiq/vxsweet:latest
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD

workflows:
  build_and_test_commit:
    description: Build and test all targets on every commit.
    jobs:
      - build_and_test
      - ts_typecheck
      - lint

jobs:
  build_and_test:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout
      - restore_bazel_cache:
          key_prefix: build_cache
      - run_build_test
      - save_test_outputs
      - save_bazel_cache:
          key_prefix: build_cache

  ts_typecheck:
    executor: nodejs
    resource_class: large
    steps:
      - checkout
      - restore_bazel_cache:
          key_prefix: typecheck_cache
      - run_ts_typecheck
      - save_bazel_cache:
          key_prefix: typecheck_cache
          gc_delay: 5

  lint:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout
      - restore_bazel_cache:
          key_prefix: lint_cache
      - run_lint_checks
      - save_test_outputs
      - save_bazel_cache:
          key_prefix: lint_cache
          gc_delay: 10

commands:
  run_build_test:
    description: Builds and tests all relevant targets in the build graph.
    steps:
      - run:
          name: Build and Test
          command: |
            bazel test //... --config=ci

  run_ts_typecheck:
    description: Runs the Typescript typechecker on all relevant files.
    steps:
      - run:
          name: Typescript Typecheck
          command: |
            bazel run //script:ci_typecheck --config=ci

  run_lint_checks:
    description: Lint all relevant source files in the build graph.
    steps:
      - run:
          name: Lint
          command: |
            bazel test //... --config=ci --test_tag_filters=lint

  save_test_outputs:
    description: Save test logs and artifacts
    steps:
      - run:
          name: Export Test Results
          when: always
          command: |
            cp -r $(bazel info bazel-testlogs) ./testlogs
      - store_test_results:
          path: ./testlogs

  restore_bazel_cache:
    description: |
        Restore a previous cache for the current branch, falling back to the
        most recent main, if a match isn't found.
    parameters:
      key_prefix:
        type: string
    steps:
      - restore_cache:
          keys:
            - << parameters.key_prefix >>-<< pipeline.parameters.cache_version >>-{{ .Branch }}-{{ .Revision }}
            - << parameters.key_prefix >>-<< pipeline.parameters.cache_version >>-{{ .Branch }}-
            - << parameters.key_prefix >>-<< pipeline.parameters.cache_version >>-main-

  save_bazel_cache:
    description: Saves the Bazel cache to the CircleCI cache for future runs.
    parameters:
      key_prefix:
        type: string
      gc_delay:
        type: integer
        default: 15
    steps:
      - when:
          condition:
              or:
                - equal: [ main, << pipeline.git.branch >> ]
                - << pipeline.parameters.force_cache_save >>
          steps:
            - run:
                name: Wait for GC
                command: sleep << parameters.gc_delay >>
            - save_cache:
                key: << parameters.key_prefix >>-<< pipeline.parameters.cache_version >>-{{ .Branch }}-{{ .Revision }}
                paths:
                  # NOTE: Keep in sync with .bazel/ci.bazelrc:
                  - /root/bazel_build_cache
