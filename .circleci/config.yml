version: 2.1

parameters:
  force_cache_save:
    type: boolean
    default: false
  cache_version:
    type: string
    default: "v3"

executors:
  nodejs:
    docker:
      - image: kofiq/vxsweet:latest
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD

workflows:
  build_and_test_commit:
    description: Build and test all targets on every commit.
    jobs:
      - build_and_test
      - lint

  daily_cache_regenerate:
    description: Regenerate the Bazel cache from scratch daily to prune stale/unused artifacts.
    jobs:
      - regenerate_cache
    triggers:
      - schedule:
          cron: "0 10 * * *"
          filters:
            branches:
              only:
                - main

jobs:
  build_and_test:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout
      - restore_playwright_cache
      - restore_bazel_cache:
          key_prefix: build_cache
      - run_build_test
      - save_playwright_cache
      - save_bazel_cache:
          key_prefix: build_cache
          key_suffix: additive
      - save_test_outputs

  lint:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout
      - restore_bazel_cache:
          key_prefix: lint_cache
      - run_lint_checks
      - save_bazel_cache:
          key_prefix: lint_cache
          key_suffix: additive
      - save_test_outputs

  regenerate_cache:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout
      - restore_playwright_cache
      - run_build_test
      - save_playwright_cache
      - save_bazel_cache:
          key_prefix: build_cache
          key_suffix: clean
      - save_test_outputs

commands:
  run_build_test:
    description: Builds and tests all relevant targets in the build graph.
    steps:
      - run:
          name: Build and Test
          command: |
            bazel test //... --config=ci --test_tag_filters=-lint --build_tag_filters=-lint

  run_lint_checks:
    description: Lint all relevant source files in the build graph.
    steps:
      - run:
          name: Lint
          command: |
            bazel test //... --config=ci --test_tag_filters=lint --build_tests_only

  save_test_outputs:
    description: Save test logs and artifacts
    steps:
      - run:
          name: Export Test Results
          when: always
          command: |
            cp -r $(bazel info bazel-testlogs) ./testlogs
      - store_test_results:
          path: ./testlogs

  restore_bazel_cache:
    description: |
        Restore a previous cache for the current branch, falling back to the
        most recent main, if a match isn't found.
    parameters:
      key_prefix:
        type: string
    steps:
      - restore_cache:
          keys:
            - << parameters.key_prefix >>-<< pipeline.parameters.cache_version >>-{{ .Branch }}-{{ .Revision }}-
            - << parameters.key_prefix >>-<< pipeline.parameters.cache_version >>-{{ .Branch }}-
            - << parameters.key_prefix >>-<< pipeline.parameters.cache_version >>-main-

  save_bazel_cache:
    description: Saves the Bazel cache to the CircleCI cache for future runs.
    parameters:
      key_prefix:
        type: string
      key_suffix:
        type: string
    steps:
      - when:
          condition:
              or:
                - equal: [ main, << pipeline.git.branch >> ]
                - << pipeline.parameters.force_cache_save >>
          steps:
            - save_cache:
                key: << parameters.key_prefix >>-<< pipeline.parameters.cache_version >>-{{ .Branch }}-{{ .Revision }}-<< parameters.key_suffix >>
                paths:
                  # NOTE: Keep in sync with .bazel/ci.bazelrc:
                  - /root/bazel_build_cache

  restore_playwright_cache:
    description: |
        Restore a previous Playwright cache for the current Playwright version
        (specified in .playwright-version).
    steps:
      - restore_cache:
          key: playwright_cache-<< pipeline.parameters.cache_version >>-{{checksum "tools/playwright/version.json" }}

  save_playwright_cache:
    description: Saves the Playwright cache, keyed by a hash of the .playwright-version file.
    steps:
      - save_cache:
          when: always
          # Bump the `cache_version` parameter to bust the cache and force a new
          # one to be saved without changing Playwright versions.
          key: playwright_cache-<< pipeline.parameters.cache_version >>-{{checksum "tools/playwright/version.json" }}
          paths:
            - /root/.cache/ms-playwright
