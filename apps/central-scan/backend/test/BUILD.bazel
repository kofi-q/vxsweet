load("//tools/ts_build:lint_test.bzl", "lint_test")
load("//tools/ts_build:ts_library.bzl", "ts_library")

# gazelle:js_mono_package

load("@aspect_rules_js//js:defs.bzl", "js_library")

ts_library(
    name = "test",
    deps = [
        "//:node_modules/@types/express",
        "//:node_modules/@types/jest",
        "//:node_modules/@types/node",
        "//:node_modules/@types/testing-library__jest-dom",
        "//:node_modules/@types/tmp",
        "//:node_modules/express",
        "//:node_modules/get-port",
        "//:node_modules/tmp",
        "//:types_env",
        "//apps/central-scan/backend/app",
        "//apps/central-scan/backend/auth",
        "//apps/central-scan/backend/importer",
        "//apps/central-scan/backend/scanners/fujitsu",
        "//apps/central-scan/backend/server",
        "//apps/central-scan/backend/store",
        "//apps/central-scan/backend/workspace",
        "//libs/auth/dipped-cards",
        "//libs/auth/test-utils",
        "//libs/basics/assert",
        "//libs/basics/iterators",
        "//libs/basics/types",
        "//libs/bmd-ballot-fixtures/src",
        "//libs/fixtures/src/data/electionFamousNames2021",
        "//libs/grout/src",
        "//libs/image-utils/src",
        "//libs/logging/src",
        "//libs/test-utils/src",
        "//libs/types/elections",
        "//libs/types/geometry",
        "//libs/usb-drive/src",
    ],
)

lint_test(name = "lint")

DATA_FILE_EXTENSIONS = [
    "jpg",
]

DATA_FILE_PATTERNS = [
    "fixtures/**/*.{}".format(ext)
    for ext in DATA_FILE_EXTENSIONS
]

js_library(
    name = "fixtures",
    data = glob(DATA_FILE_PATTERNS),
    tags = ["manual"],
    visibility = ["//apps/central-scan/backend:__subpackages__"],
)
