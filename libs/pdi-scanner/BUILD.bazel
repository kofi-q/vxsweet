load("@rules_rust//rust:defs.bzl", "rust_binary", "rust_clippy", "rust_library", "rust_test", "rustfmt_test")

rust_binary(
    name = "pdictl",
    srcs = ["src/rust/main.rs"],
    rustc_env = {
        "CARGO_BIN_NAME": "pdictl",
    },
    tags = ["rust"],
    visibility = ["//visibility:public"],
    deps = [
        # TODO: Prune deps lists for the lib and bin.
        ":lib",
        "@crates//:anyhow",
        "@crates//:base64",
        "@crates//:bitter",
        "@crates//:chrono",
        "@crates//:clap",
        "@crates//:color-eyre",
        "@crates//:crc16",
        "@crates//:crossterm",
        "@crates//:csv",
        "@crates//:ctrlc",
        "@crates//:image",
        "@crates//:libc",
        "@crates//:nom",
        "@crates//:psutil",
        "@crates//:rand",
        "@crates//:rayon",
        "@crates//:rusb",
        "@crates//:serde",
        "@crates//:serde_bytes",
        "@crates//:serde_json",
        "@crates//:thiserror",
        "@crates//:tracing",
        "@crates//:tracing-subscriber",
        "@crates//:users",
    ],
)

rust_library(
    name = "lib",
    srcs = glob(["src/rust/**/*.rs"]),
    crate_name = "pdi_scanner",
    tags = ["rust"],
    visibility = ["//visibility:public"],
    deps = [
        "@crates//:anyhow",
        "@crates//:base64",
        "@crates//:bitter",
        "@crates//:chrono",
        "@crates//:clap",
        "@crates//:color-eyre",
        "@crates//:crc16",
        "@crates//:crossterm",
        "@crates//:csv",
        "@crates//:ctrlc",
        "@crates//:image",
        "@crates//:libc",
        "@crates//:nom",
        "@crates//:psutil",
        "@crates//:rand",
        "@crates//:rayon",
        "@crates//:rusb",
        "@crates//:serde",
        "@crates//:serde_bytes",
        "@crates//:serde_json",
        "@crates//:thiserror",
        "@crates//:tracing",
        "@crates//:tracing-subscriber",
        "@crates//:users",
    ],
)

rust_test(
    name = "rust_tests",
    size = "small",
    crate = ":lib",
    tags = ["rust"],
)

rust_clippy(
    name = "clippy",
    testonly = True,
    deps = [
        ":lib",
        ":rust_tests",
    ],
)

rustfmt_test(
    name = "rustfmt",
    targets = [
        ":lib",
        ":rust_tests",
    ],
)
