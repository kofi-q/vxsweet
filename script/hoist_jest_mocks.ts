import fs from 'node:fs/promises';
import path from 'node:path';

/** Dumped with `rg -l "^jest\.mock"` */
const FILES_WITH_MODULE_MOCKS = [
  'apps/mark/backend/src/app.auth.test.ts',
  'apps/mark/backend/src/app.test.ts',
  'apps/mark/frontend/src/app_contest_write_in.test.tsx',
  'apps/mark/frontend/src/pages/accessible_controller_diagnostic_screen.test.tsx',
  'apps/mark/frontend/src/pages/diagnostics_screen.test.tsx',
  'apps/mark/frontend/src/app.test.tsx',
  'apps/mark/backend/src/server.test.ts',
  'apps/scan/frontend/src/utils/use_session_settings_manager.test.tsx',
  'apps/scan/frontend/src/screens/insert_usb_screen.test.tsx',
  'apps/scan/frontend/src/screens/scan_warning_screen.test.tsx',
  'apps/scan/frontend/src/screens/poll_worker_screen.test.tsx',
  'apps/mark/backend/src/app.ui_strings.test.ts',
  'apps/scan/frontend/src/app.test.tsx',
  'apps/scan/frontend/src/components/audio_diagnostic_modal_button.test.tsx',
  'apps/scan/backend/src/app_flow.test.ts',
  'apps/scan/backend/src/app_usb_drive.test.ts',
  'apps/scan/backend/src/app_polls_reports.test.ts',
  'apps/scan/backend/src/app_legacy_printing.test.ts',
  'apps/scan/backend/src/app_config.test.ts',
  'apps/scan/backend/src/app_auth.test.ts',
  'apps/scan/backend/src/util/workspace.test.ts',
  'apps/scan/backend/src/app_export.test.ts',
  'apps/scan/backend/src/app_ui_strings.test.ts',
  'apps/scan/backend/src/scanners/pdi/pdi_app_diagnostic.test.ts',
  'apps/scan/backend/src/app_diagnostics.test.ts',
  'apps/scan/backend/src/scanners/pdi/pdi_app_scan_jam.test.ts',
  'apps/scan/backend/src/scanners/pdi/pdi_app_scan.test.ts',
  'apps/scan/backend/src/scanners/pdi/pdi_app_scan_paused.test.ts',
  'apps/scan/backend/src/scanners/pdi/pdi_app_scan_disconnect.test.ts',
  'apps/scan/backend/src/scanners/pdi/pdi_app_scan_cover_open.test.ts',
  'apps/scan/backend/src/scanners/pdi/pdi_app_scan_double_sheet.test.ts',
  'apps/scan/backend/src/scanners/pdi/pdi_app_double_feed_calibration.test.ts',
  'apps/design/frontend/src/ballot_screen.test.tsx',
  'apps/central-scan/backend/src/exec.test.ts',
  'apps/central-scan/backend/src/fujitsu_scanner.test.ts',
  'apps/central-scan/backend/src/end_to_end_bmd.test.ts',
  'apps/central-scan/backend/src/util/workspace.test.ts',
  'apps/central-scan/backend/src/app.grout.test.ts',
  'apps/central-scan/backend/src/app.deprecated_api.test.ts',
  'apps/central-scan/backend/src/app.diagnostics.test.ts',
  'apps/central-scan/backend/src/end_to_end_hmpb.test.ts',
  'apps/scan/backend/src/scanners/custom/custom_app_scan_precinct_config.test.ts',
  'apps/scan/backend/src/scanners/custom/custom_app_scan_double_sheets.test.ts',
  'apps/design/frontend/src/export_screen.test.tsx',
  'apps/scan/backend/src/scanners/custom/custom_app_scan_jam.test.ts',
  'apps/scan/backend/src/scanners/custom/custom_app_scan_power_off.test.ts',
  'apps/scan/backend/src/scanners/custom/custom_app_scan_shoeshine_mode.test.ts',
  'apps/scan/backend/src/server.test.ts',
  'apps/scan/backend/src/store.test.ts',
  'apps/design/backend/src/app.test.ts',
  'apps/scan/backend/src/scanners/custom/custom_app_scan.test.ts',
  'apps/scan/backend/src/app_polls.test.ts',
  'apps/scan/backend/src/scanners/pdi/pdi_app_scan_shoeshine_mode.test.ts',
  'apps/scan/frontend/src/components/misvote_warnings/warning_details_modal_button.test.tsx',
  'apps/scan/frontend/src/components/misvote_warnings/warning_details.test.tsx',
  'apps/mark-scan/backend/src/server.test.ts',
  'apps/mark-scan/backend/src/app.ui_strings.test.ts',
  'apps/mark-scan/backend/src/app.auth.test.ts',
  'apps/mark-scan/backend/src/util/workspace.test.ts',
  'apps/mark-scan/backend/src/app.diagnostics.test.ts',
  'apps/mark-scan/backend/src/util/hardware.test.ts',
  'apps/mark-scan/frontend/src/pages/ballot_ready_for_review_screen.test.tsx',
  'apps/mark-scan/frontend/src/pages/waiting_for_ballot_reinsertion_screen.test.tsx',
  'apps/mark-scan/frontend/src/components/deactivate_voter_session_button.test.tsx',
  'apps/mark-scan/frontend/src/app_root.test.tsx',
  'apps/mark-scan/frontend/src/app_states.test.tsx',
  'apps/mark-scan/frontend/src/pages/scanner_open_alarm_screen.test.tsx',
  'apps/mark-scan/frontend/src/pages/jammed_page.test.tsx',
  'apps/mark-scan/frontend/src/pages/reinserted_wrong_test_mode_ballot_screen.test.tsx',
  'apps/mark-scan/frontend/src/pages/jam_cleared_page.test.tsx',
  'apps/mark-scan/frontend/src/pages/paper_reloaded_page.test.tsx',
  'apps/mark-scan/frontend/src/pages/inserted_wrong_test_mode_ballot_screen.test.tsx',
  'apps/mark-scan/frontend/src/pages/inserted_invalid_new_sheet_screen.test.tsx',
  'apps/mark-scan/frontend/src/pages/poll_worker_screen.test.tsx',
  'apps/mark-scan/frontend/src/voter_flow.test.tsx',
  'apps/mark-scan/backend/src/custom-paper-handler/mock_paper_handler_api.test.ts',
  'apps/mark-scan/frontend/src/app_contest_write_in.test.tsx',
  'apps/mark-scan/backend/src/custom-paper-handler/state_machine.test.ts',
  'apps/mark-scan/frontend/src/pages/reinserted_invalid_ballot_screen.test.tsx',
  'apps/mark-scan/backend/src/app.test.ts',
  'apps/scan/frontend/src/components/misvote_warnings/misvote_warnings.test.tsx',
  'apps/mark-scan/backend/src/custom-paper-handler/application_driver.test.ts',
  'apps/mark-scan/frontend/src/app.test.tsx',
  'apps/admin/backend/src/app.test.ts',
  'apps/admin/backend/src/app.diagnostics.test.ts',
  'apps/admin/backend/src/app.err_cdf_export.test.ts',
  'apps/admin/backend/src/app.cvr_files.test.ts',
  'apps/admin/backend/src/app.tally_report_csv.test.ts',
  'apps/admin/backend/src/util/workspace.test.ts',
  'apps/admin/backend/src/app.write_in_adjudication_report_pdf.test.ts',
  'apps/admin/backend/src/app.caching.test.ts',
  'apps/admin/backend/src/app.tally_report_pdf.test.ts',
  'apps/admin/backend/src/app.ballot_count_report_csv.test.ts',
  'apps/admin/backend/src/app.ballot_count_report_pdf.test.ts',
  'apps/admin/backend/src/app.tally_report_data.test.ts',
  'apps/admin/backend/src/app.ballot_count_report_data.test.ts',
  'apps/admin/backend/src/app.write_ins.test.ts',
  'libs/printing/src/printer/printer.test.ts',
  'libs/printing/src/printer/configure.test.ts',
  'libs/printing/src/printer/print.test.ts',
  'libs/printing/src/printer/device_uri.test.ts',
  'libs/printing/src/printer/status.test.ts',
  'apps/admin/backend/src/tabulation/full_results.test.ts',
  'libs/ballot-interpreter/src/interpret_nh_hmpb.test.ts',
  'libs/ballot-interpreter/src/interpret_vx_hmpb.test.ts',
  'libs/ballot-interpreter/src/hmpb-ts/debug.test.ts',
  'libs/ballot-interpreter/src/interpret_bmd_ballots.test.ts',
  'libs/backend/src/is_device_attached.test.ts',
  'libs/backend/src/exporter.test.ts',
  'libs/backend/src/system_call/api.test.ts',
  'libs/backend/src/election_package/election_package_io.test.ts',
  'libs/backend/src/system_call/get_battery_info.test.ts',
  'libs/backend/src/initialize_system_audio.test.ts',
  'libs/usb-drive/src/usb_drive.test.ts',
  'libs/backend/src/pdf_to_text.test.ts',
  'libs/backend/src/disk_space_summary.test.ts',
  'libs/backend/src/system_call/export_logs_to_usb.test.ts',
  'libs/backend/src/cast_vote_records/import.test.ts',
  'libs/backend/src/system_call/get_audio_info.test.ts',
  'libs/backend/src/system_call/set_clock.test.ts',
  'libs/utils/src/pins.test.ts',
  'libs/custom-paper-handler/src/driver/mock_driver.test.ts',
  'libs/custom-paper-handler/src/driver/driver.test.ts',
  'libs/custom-paper-handler/src/driver/driver_setup.test.ts',
  'libs/custom-scanner/src/open_scanner.test.ts',
  'libs/ui/src/virtual_keyboard.test.tsx',
  'libs/ui/src/ui_strings/audio_context.test.tsx',
  'libs/ui/src/ui_strings/play_audio_clips.test.tsx',
  'libs/ui/src/ui_strings/ui_string_screen_reader.test.tsx',
  'libs/ui/src/ui_strings/keyboard_shortcut_handlers.test.tsx',
  'libs/ui/src/ui_strings/with_alt_audio.test.tsx',
  'libs/ui/src/bmd_paper_ballot.test.tsx',
  'libs/ui/src/voter_settings/audio_settings.test.tsx',
  'libs/ui/src/ui_strings/audio_player.test.ts',
  'libs/ui/src/voter_settings/voter_settings.test.tsx',
  'libs/ui/src/hooks/use_headphones_plugged_in.test.ts',
  'libs/ui/src/system_administrator_screen_contents.test.tsx',
  'libs/ui/src/modal.test.tsx',
  'libs/ui/src/diagnostics/ballot_style_readiness_report.test.tsx',
  'libs/ui/src/language_settings/language_settings_button.test.tsx',
  'libs/ui/src/accessible_controllers/assistive_tech_instructions.test.tsx',
  'libs/ui/src/accessible_controllers/mark_scan_controller_sandbox.test.tsx',
  'libs/ui/src/accessible_controllers/accessible_controller_sandbox.test.tsx',
  'libs/ui/src/unconfigure_machine_button.test.tsx',
  'libs/ui/src/ui_strings/toggle_audio_button.test.tsx',
  'libs/ui/src/bmd_paper_ballot.dual_language.test.tsx',
  'libs/dev-dock/backend/src/dev_dock_api.test.ts',
  'libs/pdi-scanner/src/ts/scanner_client.test.ts',
  'libs/dev-dock/frontend/src/dev_dock.test.tsx',
  'libs/auth/src/cryptography.test.ts',
  'libs/auth/src/java_card.test.ts',
  'libs/auth/src/inserted_smart_card_auth.test.ts',
  'libs/auth/src/artifact_authentication.test.ts',
  'libs/auth/src/cac/common_access_card.test.ts',
  'libs/mark-flow-ui/src/components/candidate_contest.test.tsx',
  'libs/auth/src/certs.test.ts',
  'libs/mark-flow-ui/src/components/yes_no_contest.test.tsx',
  'libs/auth/src/card_reader.test.ts',
  'libs/auth/src/dipped_smart_card_auth.test.ts',
  'libs/mark-flow-ui/src/components/voter_screen.test.tsx',
  'libs/mark-flow-ui/src/hooks/use_session_settings_manager.test.tsx',
  'libs/mark-flow-ui/src/hooks/use_ballot_style_manager.test.tsx',
  'libs/auth/src/config.test.ts',
] as const;

const REGEX_JEST_MOCK =
  /^(jest\.mock\(.+?\);\n|jest\.mock\((?:.|\n)+?\n[})]*?\);\n)/gim;

async function main() {
  const pwd = process.argv[2] || process.cwd();

  for (const filename of FILES_WITH_MODULE_MOCKS) {
    const contents = await fs.readFile(
      path.join(__dirname, '..', filename),
      'utf-8'
    );
    const matches = contents.match(REGEX_JEST_MOCK);
    if (!matches) {
      continue;
    }

    const output = matches;
    output.push(contents.replaceAll(REGEX_JEST_MOCK, ''));
    console.log(filename);
    await fs.writeFile(filename, output.join('\n'));
  }
}

main()
  .then(() => {
    process.exit(0);
  })
  .catch((err) => {
    console.error('failed:', err);
    process.exit(1);
  });
